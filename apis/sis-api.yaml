openapi: 3.0.0
info:
  title: SIS API
  version: '0.0.1'
  description: |-
    The SIS API is implemented by the `Administratiesysteem onderwijsdeelnemer`
    
    The Administratiesysteem onderwijsdeelnemer is the source of Student, Employee, and School information and provides GET endpoints to receive the latest state.
    
    The Notifications API can be used by Consumers to receive notifications about new, modified, or deleted entitities within the SIS API.
  contact:
    name: Edu-V
    url: www.edu-v.org/afsprakenstelsel
    email: info@edu-v.org
components:
  schemas:
  
    schemaVersion:
      type: string
      description: 'Schema version of this event/object using semantic versioning 2.0.0'
      default: 0.0.1
      
    School:
      type: object
      title: School
      x-tags:
        - School
      properties:
        schoolId:
          type: string
          description: 'Unique identifier of the school. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
        schoolName:
          type: string
      required:
        - schoolId
        - schoolName
      x-examples:
        example-1:
          schoolId: '123456'
          schoolName: Edu-V College
          
    Student:
      type: object
      x-tags:
        - Student
      title: Student
      description: Access to general student information.
      x-examples:
        example-1:
          eckId: '12345678'
          userId: 
            - userId: 123456776756@assas.edu.nl
              userIdType: nlPersonRealId
          schemaVersion: 1.3.0
          firstName: Jan
          surname: Jensen
          surnamePrefix: ''
          schoolperiod: 2021-2022
          school:
            schoolId: '123456'
            schoolName: Edu-V College
          study:
            studyCode: 0170
            studyName: VWO-ATH prf Nat/Tech
            schoolStudyAbbr: ATH_N&T
            schoolStudyName: VWO Natuur en Techniek
            studyYear: 14
          schoolSubjects:
            - schoolSubjectId: 523194d6-e6b0-450c-ad3e-d5eda0396741
              startDate: '2019-08-24'
              endDate: '2019-08-24'
      properties:
        eckId:
          type: string
          description: |-
            The ECK iD of the student.
            (either eckId or userId is required)
        userId:
          type: array
          description: |-
            The User ID(s) of the student.
            (either eckId or userId is required)
          items:
            type: object
            properties:
              userId:
                type: string
              userIdType:
                type: string
                enum:
                  - nlPersonProfileId
                  - nlPersonRealId
                  - Las-key
                  - BasispoortId
            required:
              - userId
              - userIdType
        schemaVersion:
          $ref: '#/components/schemas/schemaVersion'
        firstName:
          type: string
        surname:
          type: string
        surnamePrefix:
          type: string
        schoolPeriod:
          type: string
          description: A reference to the school period for this student. (eg 2021-2021)
        school:
          $ref: '#/components/schemas/School'
        study:
          $ref: '#/components/schemas/Study'
        schoolSubjects:
          type: array
          items:
            type: object
            properties:
              schoolSubjectId:
                type: string
                format: uuid
                description: 'Identifier of a SchoolSubject'
              startDate:
                type: string
                format: date
                description: 'Student follows this subject from this date, format: YYYY-MM-DD (according to RFC3339)'
              endDate:
                type: string
                format: date
                description: 'Student follows this subject until (incl) this date, format: YYYY-MM-DD (according to RFC3339)'
            required:
              - schoolSubjectId
              - startDate
      required:
        - schemaVersion
        - firstName
        - surname
        - schoolPeriod
        - school
        - study
        
    Study:
      type: object
      x-tags:
        - Student
      x-examples:
        example-1:
          studyCode: 0170
          studyName: VWO-ATH prf Nat/Tech
          schoolStudyAbbr: ATH_N&T
          schoolStudyName: VWO Natuur en Techniek
          studyYear: 14
      title: Study
      description: |
        A Study to which a student is enrolled.
        
        Study can have the following values for studyYear:
        |studyYear|Name|Remarks|
        |---|---|---|
        |1| Primary Education (4 years old)| Apply to regular primary education |
        |2| Primary Education (5 years old)| Apply to regular primary education |
        |3-8| Primary Education learning years 3 until 8 | Apply to regular primary education |
        |S| S(B)O Speciaal (basis)onderwijs | Apply to special primary education |
        |11-16| Secondary Education learning years 1 until 6 | Apply to regular secondary education |
        |V| VSO Voortgezet Speciaal Onderwijs | Apply to special secondary education |
        |21-24| Vocational Education learning years 1 until 4 | Apply to vocational education |
      properties:
        studyCode:
          type: string
          description: 'Official code of the Study from the Ministry of OCW, see: https://zoek.officielebekendmakingen.nl/stcrt-2019-35044'
        studyName:
          type: string
          description: 'Official name of the study according to the column Korte Omschrijving in https://zoek.officielebekendmakingen.nl/stcrt-2019-35044'
        schoolStudyAbbr:
          type: string
          description: An abbreviation as chosen by the school.
        schoolStudyName:
          type: string
          description: Name of the Study as chosen by the school.
        studyYear:
          type: string
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
            - '8'
            - 'S'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '16'
            - 'V'
            - '21'
            - '22'
            - '23'
            - '24'
      required:
        - studyCode
        - studyName
        - studyYear
        
    StudentReference:
      type: object
      x-tags:
        - Student
      title: StudentReference
      properties:
        eckId:
          type: string
          description: |-
            The ECK iD of the student.
            (either eckId or userId is required)
        userId:
          type: array
          description: |-
            The User ID(s) of the student.
            (either eckId or userId is required)
          items:
            type: object
            properties:
              userId:
                type: string
              userIdType:
                type: string
                enum:
                  - nlPersonProfileId
                  - nlPersonRealId
                  - Las-key
                  - Leerlingnummer
            required:
              - userId
              - userIdType
              
    StudentDelivery:
      title: StudentDelivery
      type: object
      description: Access to delivery information for a student.
      x-tags:
        - StudentDelivery
      properties:
        eckId:
          type: string
          description: |-
            The ECK iD of the student.
            (either eckId or userId is required)
        userId:
          type: array
          description: |-
            The User ID(s) of the student.
            (either eckId or userId is required)
          items:
            type: object
            properties:
              userId:
                type: string
              userIdType:
                type: string
                enum:
                  - nlPersonProfileId
                  - nlPersonRealId
                  - Las-key
                  - Leerlingnummer
            required:
              - userId
              - userIdType
        schemaVersion:
          $ref: '#/components/schemas/schemaVersion'
        dateOfBirth:
          type: string
          format: date
          description: 'format: YYYY-MM-DD (according to RFC3339)'
        gender:
          type: string
          enum:
            - '0'
            - '1'
            - '2'
            - 'x'
            - '9'
          description: |- 
            '0: Unknown
             1: Male
             2: Female
             X: Gender neutral
             9: Unspecified'
        address:
          type: object
          properties:
            street:
              type: string
            houseNumber:
              type: string
              description: includes additions (e.g. 55-A)
            zipCode:
              type: string
            city:
              type: string
            countryCode:
              type: string
              description: According to Alpha-2 code from ISO 3166, e.g. NL
            country:
              type: string
          required:
            - street
            - houseNumber
            - zipCode
            - city
            - country
        emailSchool:
          type: string
          description: e-mail address hosted by school (e.g. L123456@sem.college.nl). One of emailSchool or emailPrivate must be present.
        emailPrivate:
          type: string
          description: private e-mail address of the student. One of emailSchool or emailPrivate must be present.
        emailParents:
          type: array
          items:
            type: object
            properties:
              emailParent:
                type: string
            required:
              - emailParent
      required:
        - schemaVersion
        - dateOfBirth
        - gender
        - address
        
    Employee:
      type: object
      x-tags:
        - Employee
      title: Employee
      x-examples:
        example-1:
          userId: string
          schemaVersion: 0
          eckId: string
          firstname: string
          surname: string
          surnamePrefix: string
          schoolPeriod: 2021-2022
          school:
            schoolId: '123456'
            schoolName: Edu-V College
      properties:
        eckId:
          type: string
          description: |-
            The ECK iD of the employee.
            (either eckId or userId is required)
        userId:
          type: array
          description: |-
            The User ID(s) of the employee.
            (either eckId or userId is required)
          items:
            type: object
            properties:
              userId:
                type: string
              userIdType:
                type: string
                enum:
                  - nlPersonProfileId
                  - nlPersonRealId
                  - Las-key
                  - BasispoortId
                  - Medewerkernummer
            required:
              - userId
              - userIdType
        schemaVersion:
          $ref: '#/components/schemas/schemaVersion'
        firstName:
          type: string
        surname:
          type: string
        surnamePrefix:
          type: string
        role:
          type: string
          default: 'Teacher'
          enum:
            - 'Teacher'
            - 'Administrator'
        schoolPeriod:
          type: string
          description: A reference to the school period for this teacher. (eg 2021-2021)
        school:
          $ref: '#/components/schemas/School'
      required:
        - schemaVersion
        - firstName
        - surname
        - role
        - schoolPeriod
        - school
        
    EmployeeReference:
      type: object
      x-tags:
        - Employee
      title: EmployeeReference
      properties:
        eckId:
          type: string
          description: |-
            The ECK iD of the employee.
            (either eckId or userId is required)
        userId:
          type: array
          description: |-
            The User ID(s) of the employee.
            (either eckId or userId is required)
          items:
            type: object
            properties:
              userId:
                type: string
              userIdType:
                type: string
                enum:
                  - nlPersonProfileId
                  - nlPersonRealId
                  - Las-key
                  - BasispoortId
                  - Medewerkernummer
            required:
              - userId
              - userIdType
    
    Class:
      type: object
      x-tags:
        - Class
      description: 'A student is part of a class in a specific school (in Dutch: Stamklas or Stamgroep). In addition a student follows subjects in groups (in Dutch: Lesgroep). These groups are exchanged as separate objects within the SIS API.'
      title: Class
      properties:
        classId:
          type: string
          format: uuid
          description: Unique identifier for the Class.
        schemaVersion:
          $ref: '#/components/schemas/schemaVersion'
        className:
          type: string
          description: Name of the Class.
        schoolPeriod:
          type: string
          description: A reference to the school period for this group. (e.g. 2021-2022)
        school:
          $ref: '#/components/schemas/School'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentReference'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeReference'
      required:
        - classId
        - schemaVersion
        - name
        - schoolPeriod
        - school
        - students
        - employees
              
    Group:
      type: object
      x-tags:
        - Group
      description: A group in which students follow a subject taught by teachers.
      title: Group
      properties:
        groupId:
          type: string
        schemaVersion:
          $ref: '#/components/schemas/schemaVersion'
        groupName:
          type: string
        schoolPeriod:
          type: string
          description: A reference to the school period for this group. (e.g. 2021-2022)
        school:
          $ref: '#/components/schemas/School'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentReference'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeReference'
        subjects:
          type: array
          items:
            type: object
            properties:
              subjectCode:
                type: string
                description: 'Government standard subject code. Source: Ministerie van OCW, like https://zoek.officielebekendmakingen.nl/stcrt-2019-35044'
              schoolSubjectAbbr:
                type: string
                description: Abbreviation that the school gives to this subject (like 'en')
              schoolSubjectName:
                type: string
                description: Optional name of subject if different within specific school.
            required:
              - schoolSubjectAbbr
              - schoolSubjectName
      required:
        - groupId
        - groupName
        - schemaVersion
        - schoolPeriod
        - school
        - students
        - employees
        
    SchoolSubject:
      type: object
      title: SchoolSubject
      x-tags:
        - SchoolSubject
      x-examples:
        example-1:
          schoolSubjectId: a50cf922-5bd6-419d-a50b-a39ac5e5b48f
          schemaVersion: 1.3.0
          subjectCode: '0071'
          schoolSubjectAbbr: en
          schoolSubjectName: Engels
          schoolLevel: 'VMBO-BB Onderbouw'
          levels:
            - level: VO-VMBO-BB
              levelYear: 1
            - level: VO-VMBO-BB
              levelyear: 2
      description: |
        The school subject is the combination of a subject, combined with the level of the study the subject is part of.
        For both the subject and the level, the official government codes and the code from the school are provided. In this way the teachers recognize their terminology, while other reference components can link this to the generic official codes.
      properties:
        schoolSubjectId:
          type: string
          format: uuid
          description: 'Meaningless uuid/guid chosen by the SIS'
        schemaVersion:
          $ref: '#/components/schemas/schemaVersion'
        subjectCode:
          type: string
          description: 'Government standard subject code. Source: Ministerie van OCW, like https://zoek.officielebekendmakingen.nl/stcrt-2019-35044'
        schoolSubjectAbbr:
          type: string
          description: Abbreviation that the school gives to this subject (like 'en')
        schoolSubjectName:
          type: string
          description: Optional name of subject if different within specific school.
        schoolLevel:
          type: string
          description: 'School name of the Level. example ''HAVO-2'',''Technasium-1'' This gives schools a way to name how they want it, while we still have a link with the official level'
        levels:
          type: array
          description: 'List of official levels this study and subject combination. could be multiple in case of schoollevel "Brugklas", "onderbouw", etc'
          items:
            type: object
            description: 'List of official levels this study and subject combination. could be multiple in case of schoollevel "Brugklas", "onderbouw", etc'
            properties:
              level:
                type: string
                description: |-
                  Official Level. 
                  Allowed values are: VO-PRO, VO-VMBO-BB, VO-VMBO-KB, VO-VMBO-GL, VO-VMBO-TL, VO-HAVO, VO-VWO 
                  As specified here: https://lod.onderwijsregistratie.nl/api/catalogus/v1/klasse?subject=http://lod.onderwijsregistratie.nl/cat/cdm/def/NiveauVO-v03.2'
                enum:
                  - BO
                  - SO
                  - SBO
                  - VO-PRO
                  - VO-VMBO-BB
                  - VO-VMBO-KB
                  - VO-VMBO-GL
                  - VO-VMBO-TL
                  - VO-HAVO
                  - VO-VWO
                  - VSO
                  - MBO-Niveau-1
                  - MBO-Niveau-2
                  - MBO-Niveau-3
                  - MBO-Niveau-4
              levelYear:
                type: integer
                description: Learning year (eg 1)
            required:
              - level
              - levelYear
      required:
        - schoolSubjectId
        - schemaVersion
        - schoolSubjectAbbr
        - schoolSubjectName
        - schoolLevel
        
    SchoolPeriod:
      title: SchoolPeriod
      type: object
      x-tags:
        - SchoolPeriod
      description: |-
        A school period is the timed scope where students, teachers, subjects and groups are exchanged.
        For each school period students and teachers are exchanged. In this way we can exchange information for a next year while the current period is still active. 
        Most of the times a school period is equivalent of a school year. eg 2021-2022. In some situations a school period could be a half year period or a 2 year period. The `Administratiesysteem onderwijsdeelnemer` will exchange the periods for reference. 
        An `Administratiesysteem onderwijsdeelnemer` can choose not to send notifications about students/teachers for the next schoolyear until that period is started. The list of SchoolSubjects should be available well before the start of a new period, so all suppliers can prepare for that period. 
      x-examples:
        example-1:
          name: 2021-2022
          schemaVersion: 1.3.0
          start: '2021-08-01'
          end: '2022-07-31'
      properties:
        name:
          type: string
          description: Description of school period (eg 2021-2022 or 2022H1)
        schemaVersion:
          $ref: '#/components/schemas/schemaVersion'
        start:
          type: string
          format: date
          description: 'Start of the school period, format: YYYY-MM-DD (according to RFC3339)'
        end:
          type: string
          format: date
          description: 'End of the school period, format: YYYY-MM-DD (according to RFC3339)'
      required:
        - name
        - schemaVersion
  
    StatusResponse:
      title: StatusResponse
      type: object
      description: 'Functional status code and status message.'
      properties:
        status:
          type: integer
          description: 'See functional status codes within the Documentation.'
        statusMessage:
          type: string
          description: 'See functional status messages within the Documentation.'
      required:
        - status
  
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api.example.com/oauth2/token
          refreshUrl: https://api.example.com/oauth2/token
          scopes:
            sis.student-delivery: 'a scope that gives access to student delivery information including address'
            sis.student-teacher-group: 'a scope that gives access to student, teacher and group data'
            sis.school: 'A scope that allows access to the basic school information: periods and subjects'
            
paths:
  
  /students:
    parameters:
      - schema:
          type: string
        name: edu_org_id
        in: query
        required: true
        description: "All data from the SIS API requires a consent from the School. The `edu_org_id` parameter is mandatory to request information from the `Administratiesysteem onderwijsdeelnemer`. This allows the provider to check if the requesting client has an active data exchange (consent) for the specified edu_org_id."
      - schema:
          type: string
        name: schoolId
        in: query
        required: true
        description: 'Unique identifier of the school of which data is requested. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
      - schema:
          type: string
        name: schoolPeriod
        in: query
        required: false
        description: 'Optional, defaults to current school period.'
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: 'Optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.'
    get:
      summary: Get all Students from a School
      x-tags:
        - Student
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-students
      description: 'Retrieve basic student information, including their class, study and subject choices.'
      parameters:
        - schema:
            type: integer
          name: start
          in: query
          description: 'Start point for pagination of results, defaults to 0,'
          examples:
            default:
              value: 0
              summary: The start point for pagination
        - schema:
            type: integer
            maximum: 100
          in: query
          name: limit
          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'
          examples:
            default:
              value: 20
              summary: The default value if none is provided
            max:
              value: 100
              summary: The largest recommended page size
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
    post:
      summary: Get a Student from a School by ID
      x-tags:
        - Student
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-student-by-id
      description: 'Retrieve basic student information, including their class, study and subject choices.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                studentReference:
                  $ref: '#/components/schemas/StudentReference'
              required:
                - studentReference
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.student-teacher-group
  
  /students/delivery-information:
    parameters:
      - schema:
          type: string
        name: edu_org_id
        in: query
        required: true
        description: "All data from the SIS API requires a consent from the School. The `edu_org_id` parameter is mandatory to request information from the `Administratiesysteem onderwijsdeelnemer`. This allows the provider to check if the requesting client has an active data exchange (consent) for the specified edu_org_id."
      - schema:
          type: string
        name: schoolId
        in: query
        required: true
        description: 'Unique identifier of the school of which data is requested. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
      - schema:
          type: string
        name: schoolPeriod
        in: query
        required: false
        description: 'Optional, defaults to current school period.'
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: 'Optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.'
    get:
      summary: Get delivery information for all Students from a School
      x-tags:
        - StudentDelivery
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-student-delivery-information
      description: Retrieve delivery information of students.
      parameters:
        - schema:
            type: integer
          name: start
          in: query
          description: 'Start point for pagination of results, defaults to 0,'
          examples:
            default:
              value: 0
              summary: The start point for pagination
        - schema:
            type: integer
            maximum: 100
          in: query
          name: limit
          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'
          examples:
            default:
              value: 20
              summary: The default value if none is provided
            max:
              value: 100
              summary: The largest recommended page size
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDelivery'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
    post:
      summary: Get delivery information for a Student by ID
      x-tags:
        - StudentDelivery
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-student-delivery-information-by-id
      description: Retrieve delivery information by ID - this entity is only available to a specific scope.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                studentReference:
                  $ref: '#/components/schemas/StudentReference'
              required:
                - studentReference
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDelivery'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.student-delivery
            
  /employees:
    parameters:
      - schema:
          type: string
        name: edu_org_id
        in: query
        required: true
        description: "All data from the SIS API requires a consent from the School. The `edu_org_id` parameter is mandatory to request information from the `Administratiesysteem onderwijsdeelnemer`. This allows the provider to check if the requesting client has an active data exchange (consent) for the specified edu_org_id."
      - schema:
          type: string
        name: schoolId
        in: query
        required: true
        description: 'Unique identifier of the school of which data is requested. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
      - schema:
          type: string
        name: schoolPeriod
        in: query
        required: false
        description: 'Optional, defaults to current school period.'
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: 'Optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.'
    get:
      summary: Get all Employees from a School
      x-tags:
        - Employee
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-employees
      description: 'Retrieve employee information'
      parameters:
        - schema:
            type: integer
          name: start
          in: query
          description: 'Start point for pagination of results, defaults to 0,'
          examples:
            default:
              value: 0
              summary: The start point for pagination
        - schema:
            type: integer
            maximum: 100
          in: query
          name: limit
          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'
          examples:
            default:
              value: 20
              summary: The default value if none is provided
            max:
              value: 100
              summary: The largest recommended page size
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
    post:
      summary: Get an Employee from a School by ID
      x-tags:
        - Employee
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-employee-by-id
      description: 'Retrieve basic employee information'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeReference:
                  $ref: '#/components/schemas/EmployeeReference'
              required:
                - employeeReference
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.student-teacher-group
  
  /classes:
    parameters:
      - schema:
          type: string
        name: edu_org_id
        in: query
        required: true
        description: "All data from the SIS API requires a consent from the School. The `edu_org_id` parameter is mandatory to request information from the `Administratiesysteem onderwijsdeelnemer`. This allows the provider to check if the requesting client has an active data exchange (consent) for the specified edu_org_id."
      - schema:
          type: string
        name: schoolId
        in: query
        required: true
        description: 'Unique identifier of the school of which data is requested. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
      - schema:
          type: string
        name: schoolPeriod
        in: query
        required: false
        description: 'Optional, defaults to current school period.'
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: 'Optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.'
    get:
      summary: Get all Classes from a School
      x-tags:
        - Class
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-classes
      description: |-
        Retrieve information about all classes from a school, this includes the employees and students.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Class'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.student-teacher-group
  
  /classes/{id}:
    parameters:
      - schema:
          type: string
        name: edu_org_id
        in: query
        required: true
        description: "All data from the SIS API requires a consent from the School. The `edu_org_id` parameter is mandatory to request information from the `Administratiesysteem onderwijsdeelnemer`. This allows the provider to check if the requesting client has an active data exchange (consent) for the specified edu_org_id."
      - schema:
          type: string
        name: schoolId
        in: query
        required: true
        description: 'Unique identifier of the school of which data is requested. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: 'Unique identifier of the class'
      - schema:
          type: string
        name: schoolPeriod
        in: query
        required: false
        description: 'Optional, defaults to current school period.'
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: 'Optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.'
    get:
      summary: Get a Class from a School by ID
      x-tags:
        - Group
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-class-by-id
      description: |-
        Retrieve information about a specific class by ID, this includes the employees and students.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.student-teacher-group
  
  /groups:
    parameters:
      - schema:
          type: string
        name: edu_org_id
        in: query
        required: true
        description: "All data from the SIS API requires a consent from the School. The `edu_org_id` parameter is mandatory to request information from the `Administratiesysteem onderwijsdeelnemer`. This allows the provider to check if the requesting client has an active data exchange (consent) for the specified edu_org_id."
      - schema:
          type: string
        name: schoolId
        in: query
        required: true
        description: 'Unique identifier of the school of which data is requested. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
      - schema:
          type: string
        name: schoolPeriod
        in: query
        required: false
        description: 'Optional, defaults to current school period.'
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: 'Optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.'
    get:
      summary: Get all Groups from a School
      x-tags:
        - Group
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-groups
      description: |-
        Retrieve information about all groups from a school, this includes the employees, students and subjects taught in the group.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.student-teacher-group
  
  /groups/{id}:
    parameters:
      - schema:
          type: string
        name: edu_org_id
        in: query
        required: true
        description: "All data from the SIS API requires a consent from the School. The `edu_org_id` parameter is mandatory to request information from the `Administratiesysteem onderwijsdeelnemer`. This allows the provider to check if the requesting client has an active data exchange (consent) for the specified edu_org_id."
      - schema:
          type: string
        name: schoolId
        in: query
        required: true
        description: 'Unique identifier of the school of which data is requested. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: 'Unique identifier of the group'
      - schema:
          type: string
        name: schoolPeriod
        in: query
        required: false
        description: 'Optional, defaults to current school period.'
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: 'Optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.'
    get:
      summary: Get a Group from a School by ID
      x-tags:
        - Group
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-group-by-id
      description: |-
        Retrieve information about a specific group by ID, this includes the employees, students and subjects taught in the group.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.student-teacher-group
  
   
  /schoolsubjects:
    parameters:
      - schema:
          type: string
        name: edu_org_id
        in: query
        required: true
        description: "All data from the SIS API requires a consent from the School. The `edu_org_id` parameter is mandatory to request information from the `Administratiesysteem onderwijsdeelnemer`. This allows the provider to check if the requesting client has an active data exchange (consent) for the specified edu_org_id."
      - schema:
          type: string
        name: schoolId
        in: query
        required: true
        description: 'Unique identifier of the school of which data is requested. In primary education the BasispoortId is used. In secondary and vocational education the digiDeliveryId is used. The digiDeliveryId is case sensitive.'
      - schema:
          type: string
        name: schoolPeriod
        in: query
        required: false
        description: 'Request the list of school subjects for a particular school period. Default is current school period.'
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: 'Optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.'
    get:
      summary: Get all SchoolSubjects from a School
      x-tags:
        - SchoolSubject
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-schoolsubjects
      description: Get all schoolSubjects for a specified school.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolSubject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.school
      
  /schoolsubjects/{id}:
    parameters:
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id of the requested resource.
    get:
      summary: Get a SchoolSubject from a School by ID
      x-tags:
        - SchoolSubject
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-schoolsubject-by-id
      description: Get information about a SchoolSubject by ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolSubject'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.school
      
      
  /schoolperiods:
    parameters:
      - schema:
          type: string
        name: schemaVersion
        in: query
        required: false
        description: optional parameter to request a response in a specific schema version. If none supplied, the server will choose its default schema version.
    get:
      summary: Get all SchoolPeriods from a School
      x-tags:
        - SchoolPeriod
      tags:
        - Administratiesysteem onderwijsdeelnemer
      operationId: get-schoolperiods
      description: |-
        Retrieve a list of current and upcoming SchoolPeriods. 
        Usually start and stop dates op periods are adjacent, but start and stop dates can overlap in special situations.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolPeriod'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
      security:
        - OAuth2:
            - sis.school
x-tags:
  - name: School
  - name: Student
  - name: StudentDelivery
  - name: Employee
  - name: Class
  - name: Group
  - name: SchoolSubject
  - name: SchoolPeriod